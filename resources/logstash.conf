input { 
	redis { 
		host => "127.0.0.1" 
		type => "redis-input" 
		data_type => "list" 
		key => "logstash" 
	} 
	syslog {
		type => "syslog"
		port => 5514
	}
	file {
		type => "redis"
		path => [ "/var/log/redis/redis-server.log" ]
		start_position => "beginning"
	}
	file {
		type => "logstash"
		path => [ "/var/log/logstash/logstash.err", "/var/log/elasticsearch/logstash.log" ]
		start_position => "beginning"
	}
	lumberjack {
		port => 6782
		ssl_certificate => "/app/certs/server.crt"
		ssl_key => "/app/certs/server.key"
		type => "lumberjack"
		codec => "json"
	}
} 
filter {
	if [type] == "nginx-access" {
		mutate {
			add_field => [ "functional_component", "webserver" ]
			add_field => [ "layer", "infrastructure" ]
		}
		geoip {
			source => "remote_addr"
		}
		if [status] in ["200","304"] {
			mutate { add_tag => "success" }
		}
		if !([status] in ["200","304"]) {
			mutate { add_tag => "failure" }
		}
		if [status] =~ /^2\d\d/ {
			mutate { add_tag => "200s" }
		}				
		if [status] =~ /^3\d\d/ {
			mutate { add_tag => "300s" }
		}				
		if [status] =~ /^4\d\d/ {
			mutate { add_tag => "400s" }
		}		
		if [status] =~ /^5\d\d/ {
			mutate { add_tag => "500s" }
		}
		if [message] !~ /(.*+)/ {
			mutate { add_field => [ "message", "Requested '%{request_method} %{request_uri}' using a %{content_interface} interface. Response was %{status} to client IP %{remote_addr} in %{request_time} secs" ] }
		}
	}
	if [type] == "nginx-error" {
		mutate {
			add_field => [ "functional_component", "webserver" ]
			add_field => [ "layer", "infrastructure" ]
			add_field => [ "original_message", "%{message}" ]
		}
		grok {
			match => {
		        "message" => [
		          "%{DATESTAMP:mydate} \[%{DATA:severity}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{GREEDYDATA:message}",
		          "%{DATESTAMP:mydate} \[%{DATA:severity}\] %{GREEDYDATA:message}",
		          "%{DATESTAMP:mydate} %{GREEDYDATA:message}"
		        ]
			}
		}
	}
	if [type] == "logstash" {
		grok {
			match => {
				"message" => [
					"\[%{DATA:timestamp}\]\[%{DATA:severity}\]\[%{DATA:instance}\]%{DATA:message}, reason:%{GREEDYDATA:reason}",
					"\[%{DATA:timestamp}\]\[%{DATA:severity}\]\[%{DATA:instance}\]%{GREEDYDATA:message}"
				]
			}
		}
	}
	
}
output { 
	stdout { } 
	elasticsearch {
		cluster => "logstash"
	}
}