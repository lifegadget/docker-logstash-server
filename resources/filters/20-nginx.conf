filter {
	if [type] == "nginx-access" {
		mutate {
			add_field => [ "functional_component", "webserver" ]
			add_field => [ "layer", "infrastructure" ]
			convert => [ "status", "integer" ]
		}
		geoip {
			source => "remote_addr"
		}
		if [status] in [200,304] {
			mutate { add_tag => "success" }
		}
		if [status] in [301,307,308] {
			mutate { add_tag => "redirect" }
		}
		if !([status] in [200,304,301,307,308]) {
			mutate { add_tag => "failure" }
		}
		if [message] !~ /(.*+)/ {
			mutate { add_field => [ "message", "Requested '%{request_method} %{request_uri}' using a %{content_interface} interface. Response was %{status} to client IP %{remote_addr} in %{request_time} secs" ] }
		}
	}
	if [type] == "nginx-error" {
		mutate {
			add_field => [ "functional_component", "webserver" ]
			add_field => [ "layer", "infrastructure" ]
		}
		grok {
			match => {
				overwrite => "message"
		        "message" => [
		          "%{DATESTAMP:timestamp}\[%{DATA:severity}\]%{NUMBER:pid:int}#%{NUMBER:unknown}: \*%{NUMBER:error_count:int}%{DATA:message}, request: %{QUOTEDSTRING:request}, host: %{QUOTEDSTRING:host}",
		          "%{DATESTAMP:timestamp}\[%{DATA:severity}\]%{NUMBER:pid:int}#%{NUMBER:unknown}: \*%{NUMBER:error_count:int}%{GREEDYDATA:message}",
		          "%{DATESTAMP:timestamp}\[%{DATA:severity}\]%{GREEDYDATA:message}",
		          "%{DATESTAMP:timestamp} %{GREEDYDATA:message}"
		        ]
			}
		}
	}
}